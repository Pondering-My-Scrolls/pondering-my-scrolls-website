.wo,
.wo-stacked,
.wo-full {
    max-width: 112.5rem;
    margin: 0 auto;
    position: relative;
    text-align: center;
    * {
        text-align: left;
    }
    &.between {
        align-content: space-around;
    }
    &.center {
        align-items: center;
    }
    .left {
        justify-self: start;
    }
    .right {
        justify-self: end;
    }
    .bottom {
        align-self: end; 
    }
    .center {
        justify-self: center;
        text-align: center;
        * {
            text-align: center;
        }
    }
}

.pv {
    padding-top: clamp(3rem, 5%, 8rem) !important;
    padding-bottom: clamp(3rem, 5%, 8rem) !important;
}

img[class^="col-"],
img[class*="col-"] {
    place-self: start;
}

.wo,
.wo-full {
    display: grid;
    grid-template-columns: repeat($column-count-s, 1fr);
    gap: 0 $column-gap + px;
    justify-items: stretch;
    align-items: start;
}

.wo,
.wo-stacked {
    padding: 0 $margin-s + px;
}

.wo .wo {
    padding: 0;
    margin: 0;
}

.wo-full {
    padding: 0 $margin-s + px;
}

.wo > * {
    grid-column-start: 1;
    grid-column-end: $column-count-s + 1;
}

@for $a-s from 1 through $column-count-s {
    @for $b-s from 1 through $column-count-s + 1 {
        .s-col-#{$a-s}-#{$b-s} {
            grid-column-start: $a-s;
            grid-column-end: $b-s;
        }
    }
}

@media only screen and (max-width: $mobile) {
    .s-hide {
        display: none !important;
    }
}

@media only screen and (min-width: $mobile) and (max-width: $desktop) {
    .wo,
    .wo-full {
        grid-template-columns: repeat($column-count-m, 1fr);
        gap: 0 $column-gap + px;
    }

    .m-hide {
        display: none !important;
    }

    .wo,
    .wo-stacked {
        padding: 0 $margin-m + px;
    }

    .wo-full {
        padding: 0 $margin-m + px;
    }

    .wo > * {
        grid-column-start: 1;
        grid-column-end: $column-count-m + 1;
    }

    @for $a-m from 1 through $column-count-m {
        @for $b-m from 1 through $column-count-m + 1 {
            .m-col-#{$a-m}-#{$b-m} {
                grid-column-start: $a-m;
                grid-column-end: $b-m;
            }
        }
    }
}

@media only screen and (min-width: $desktop) {
    .wo,
    .wo-full {
        grid-template-columns: repeat($column-count, 1fr);
        gap: 0 $column-gap + px;
    }

    .l-hide {
        display: none !important;
    }

    .wo,
    .wo-stacked {
        padding: 0 $margin + px;
    }

    .wo-full {
        padding: 0 $margin + px;
    }

    .wo > * {
        grid-column-start: 1;
        grid-column-end: $column-count + 1;
    }

    @for $a from 1 through $column-count {
        @for $b from 1 through $column-count + 1 {
            .col-#{$a}-#{$b} {
                grid-column-start: $a;
                grid-column-end: $b;
            }
        }
    }
}